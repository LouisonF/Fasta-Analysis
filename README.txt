L'objectif de mon script à été de tester l'écriture de script python orienté objet.
C'est pourquoi mon script est constitué d'un fichier d'appel principal qui est fasta_analysis qui charge un module qui contient deux classes et un autre module qui contient le parser de paramètres.
Il y'a trois méthodes différentes qui réalisent chacune une action particulière (parsing du fasta, construction du graph, affichage/enregistrement du graph).
En ce qui concerne la programmation à proprement parler du script en orienté objet je suis parti d'une implémentation modulaire que je maitrise pour le "transcrire" en classe/méthode. 
J'ai notamment rencontré une diffcultée pour la méthode "build_graph" qui nécessite d'itérer sur un objet de classe "fasta_data". Pour contourner ce problème j'ai fait en sorte de stocker le résultat de ma méthode dans une variable sur laquelle j'itère ensuite. Cependant j'ai pu voir sur internet qu'il existait des classes itérables (construites à partir de méthodes particulières et d'une métaclasse), ce qui pourrait être une piste d'amélioration et de compréhension des classes en python.
J'ai fait le choix de rendre le script intéractif avec l'utilisateur uniquement lors de l'appel (si tous les paramètres ne sont pas correctements fournis) afin de rendre le script utilisable dans un plus grand programme.
J'ai aussi fait le choix d'intégrer au graphique uniquement les noeuds présentant des arrêtes avec un score supérieur au seuil rentré par l'utilisateur. Cela permet d'éviter une surcharge du graph lorsqu'il y'a beaucoup de séquences dans le/les fichiers fasta en entrée.